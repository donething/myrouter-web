import React from "react"import {SettingsType} from "./SettingsType.ts"import {Card, CardContent, CardHeader} from "@/components/ui/card.tsx"import {Input} from "@/components/ui/input.tsx"import {toast} from "@/components/ui/use-toast.ts"import {Label} from "@/components/ui/label.tsx"import {Button} from "@/components/ui/button.tsx"import {ToastAction} from "@/components/ui/toast.tsx"// 存储设置到localstorage的键export const LS_SETTINGS = "settings"// 设置的默认值const defaultValue: SettingsType = {auth: ""}// 设置组件const Settings = React.memo(() => {  // 设置数据  const [settings, setSettings] = React.useState(defaultValue)  // 当 auth 被改变时  const onAuthChanged = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {    setSettings(prev => ({...prev, [event.target.id]: event.target.value}))  }, [])  // 保存设置到存储  const onSave = React.useCallback(() => {    const data = JSON.stringify(settings)    localStorage.setItem(LS_SETTINGS, data)    toast({description: "已保存设置"})  }, [settings])  // 清空设置和相关的存储  const onDel = React.useCallback(() => {    localStorage.removeItem(LS_SETTINGS)    const prev = settings    setSettings(defaultValue)    // 提示是否恢复    toast({      title: "已清空设置",      description: "是否恢复设置",      action: <ToastAction altText={"恢复"} onClick={() => {        localStorage.setItem(LS_SETTINGS, JSON.stringify(prev))        setSettings(prev)        toast({description: "已恢复设置"})      }}>恢复</ToastAction>    })  }, [settings])  // 初次加载设置  const init = React.useCallback(() => {    const str = localStorage.getItem(LS_SETTINGS)    if (!str) {      return    }    const obj = JSON.parse(str)    setSettings(obj)  }, [])  // 初次加载设置  React.useEffect(() => {    init()  }, [init])  return (    <div className={"flex flex-col gap-4"}>      <Card>        <CardHeader>基础设置</CardHeader>        <CardContent>          <div>            <Label htmlFor="auth">操作授权码</Label>            <Input type="password" id="auth" placeholder="授权码" value={settings.auth} onChange={onAuthChanged}/>          </div>        </CardContent>      </Card>      <div className={"flex flex-row justify-between"}>        <Button size={"sm"} variant={"destructive"} onClick={onDel}>清空设置</Button>        <Button size={"sm"} onClick={onSave}>保存设置</Button>      </div>    </div>  )})export default Settings